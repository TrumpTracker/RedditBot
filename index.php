<?php
require('trumptrackerbot.class.php');
$clientId = ""; //App credentials from https://www.reddit.com/prefs/apps/
$clientSecret = "";

$bot = new TrumpTrackerBot($clientId,$clientSecret);
if(!isset($_GET['code'])) { //TrumpTracker is not logged in, lets ask to log in
	$bot->oAuthLogin();
}
else {
	$bot->connectToReddit($_GET['code']); //We have permission, lets log in
	$json = $bot->getData(); //Get the data.json
	foreach($json['promises'] as $index => $promise) { //For every policy or quote from Donald Trump
		if(isset($_GET['archiving'])) {
			$comment = $bot->submitComment("**This is an archived post. You won't be able to vote or comment.**\n\nReddit automatically archives posts after 6 months. Therefore, [a new post has been created to discuss this promise](" . $promise['url'] . "?reddit).\n\n------\n\n*This post was automatically generated by the official TrumpTracker-bot.*",$promise['comments'][0]);
			$bot->distinguishItem($comment['result']['json']['data']['things'][0]['data']['name'],"yes",true);
		}
		elseif(isset($_GET['new'])) {
			$format = $bot->format($promise['title'],$promise['url']); //Make a template for the post
			$post = $bot->submitPost($format['title'],$format['url'],"trumptracker"); //Submit the template to the subreddit
			$comment = $bot->submitComment("Please use the comments to discuss this promise/policy. Please keep comments civil and respect everyone's opinion.\n\n------\n\n*This post was automatically generated by the official TrumpTracker-bot.*\n\n[Official website](https://trumptracker.github.io) | [Submit new policy](https://viren8.typeform.com/to/CA1RiV?) | [About TrumpTracker](https://trumptracker.github.io/about/) | [Contribute](https://github.com/TrumpTracker/trumptracker.github.io)",$post['result']['json']['data']['name']);
			$bot->distinguishItem($comment['result']['json']['data']['things'][0]['data']['name'],"yes",true);
			$bot->distinguishItem($post['result']['json']['data']['name'],"yes");
			$bot->approvePost($post['result']['json']['data']['name']);
			array_unshift($json['promises'][$index]['comments'], "https://redd.it/" . $post['result']['json']['data']['link_id']);
		}
		die();
	}
	$bot->exportJSON($json,"data.json");
}